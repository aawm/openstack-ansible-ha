---

- name: Install mariadb-galera server
  apt: name={{ item }} state=installed force=yes
  with_items:
   - mariadb-galera-server
   - galera
   - python-mysqldb

- name: Configure my.cnf
  template: src=my.j2 dest=/etc/mysql/my.cnf
  notify: restart mysql

- name: copy wsrep.cnf to controller1
  template: src=wsrep_cnt1.j2 dest=/etc/mysql/conf.d/wsrep.cnf
  when: hostname == "controller1"


- name: copy wsrep.cnf to controller2
  template: src=wsrep_cnt2.j2 dest=/etc/mysql/conf.d/wsrep.cnf
  when: hostname == "controller2"

- name: copy wsrep.cnf to controller3
  template: src=wsrep_cnt3.j2 dest=/etc/mysql/conf.d/wsrep.cnf
  when: hostname == "controller3"

- name: grap debian.cnf and then put them to other controller nodes
  fetch: dest=fetch/debian.cnf flat=yes src=/etc/mysql/debian.cnf
  when: hostname == "controller1"

- name: Copy debian.cnf
  copy: src=fetch/debian.cnf dest=/etc/mysql/debian.cnf
  register: new_deb
  when: (hostname == "controller2" or hostname == "controller3")

- name: update mysql root password for all root accounts
  mysql_user: name=root host={{ item }} password={{ mysql_root_db_pass }} priv=*.*:ALL,GRANT
  with_items:
   - "{{ ansible_hostname }}"
   - 127.0.0.1
   - ::1
   - localhost
  when: new_deb.changed

- name: copy .my.cnf file with root password credentials
  template: src=my.cnf.j2 dest=~/.my.cnf mode=0600



- name: ensure anonymous users are not in the database
  mysql_user: name='' host={{ item }} state=absent
  with_items:
   - localhost
  when: new_deb.changed


- name: remove the test database
  mysql_db: name=test state=absent
  when: new_deb.changed

- name: ensure all node mysql service is stopped
  service: name=mysql state=stopped


#- name: Copy debian.cnf
#  copy: src=fetch/debian.cnf dest=/etc/mysql/debian.cnf
#  synchronize: mode=push src=/etc/mysql/debian.cnf dest=/etc/mysql/debian.cnf
#  delegate_to: controller1
#  when: (hostname == "controller2" or hostname == "controller3")


- name: Start new mysql cluster on controller1
  service: name=mysql state=started args=--wsrep-new-cluster
  when: hostname == "controller1"


- name: Start mysql on other nodes
  service: name=mysql state=started 
  when: (hostname == "controller2" or hostname == "controller3")


- name: copy hauser.sql
  template: src=hauser.sql dest=/tmp
  when: new_deb.changed

- name: Create ha user in mysql
  mysql_db: name=all state=import target=/tmp/hauser.sql
  when: new_deb.changed



- meta: flush_handlers





