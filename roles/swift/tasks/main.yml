---


- name: Install swift packages
  apt: name={{ item }} state=installed force=yes
  with_items:
   - swift
   - swift-proxy
   - python-swiftclient

- name: Ensure /etc/swift/ is ok
  file: path=/etc/swift state=directory owner=root group=swift


- name: Configure proxy-server
  template: src=proxy-server.j2 dest=/etc/swift/proxy-server.conf


- name: Configure swift
  template: src=swift.j2 dest=/etc/swift/swift.conf




- name: run swift-ring-builder for accounts, containers, and objects
  command: swift-ring-builder {{ item }}.builder create 10 {{ swift_replica_num }} 1 
           chdir=/etc/swift 
           creates=/etc/swift/{{ item }}.ring.gz 
  with_items:
    - account
    - container
    - object



- name: check if account.ring.gz already exists
  #stat: path=/etc/swift/{{ item }}.ring.gz
  command: ls /etc/swift/account.ring.gz
  register: rings_exist
  ignore_errors: true
  changed_when: rings_exist.rc > 0


- name: build account ring for node1
  command: swift-ring-builder account.builder add --region 1 --zone 1 --ip {{ swift_storage_node1 }} --port 6002 --device {{ swift_dev_name }} --weight 100
           chdir=/etc/swift
  when: rings_exist.rc > 0 and hostname == "controller1"
  ignore_errors: true
 

- name: build account ring for node2
  command: swift-ring-builder account.builder add --region 1 --zone 1 --ip {{ swift_storage_node2 }} --port 6002 --device {{ swift_dev_name }} --weight 100
           chdir=/etc/swift
  when: rings_exist.rc > 0 and  hostname == "controller1"
  ignore_errors: true


- name: build container ring for node1
  command: swift-ring-builder container.builder add --region 1 --zone 1 --ip {{ swift_storage_node1 }} --port 6001 --device {{ swift_dev_name }} --weight 100
           chdir=/etc/swift
  when: rings_exist.rc > 0 and  hostname == "controller1"
  ignore_errors: true

- name: build container ring for node2
  command: swift-ring-builder container.builder add --region 1 --zone 1 --ip {{ swift_storage_node2 }} --port 6001 --device {{ swift_dev_name }} --weight 100
           chdir=/etc/swift
  when: rings_exist.rc > 0 and  hostname == "controller1"
  ignore_errors: true


- name: build object ring for node1
  command: swift-ring-builder object.builder add --region 1 --zone 1 --ip {{ swift_storage_node1 }} --port 6000 --device {{ swift_dev_name }} --weight 100
           chdir=/etc/swift
  when: rings_exist.rc > 0 and  hostname == "controller1"
  ignore_errors: true


- name: build object ring for node2
  command: swift-ring-builder object.builder add --region 1 --zone 1 --ip {{ swift_storage_node2 }} --port 6000 --device {{ swift_dev_name }} --weight 100
           chdir=/etc/swift
  when: rings_exist.rc > 0 and  hostname == "controller1"
  ignore_errors: true

- name: rebalance rings
  command: swift-ring-builder {{ item }}.builder rebalance
           creates=/etc/swift/{{ item }}.ring.gz
           chdir=/etc/swift
  register: rebalance
  with_items:
    - account
    - object
    - container
  when: hostname == "controller1"

# This will fetch from all proxies, if there are more than one and put the rings files in the same spot, which is Ok but not perfect
- name: grab resulting *.ring.gz files and put them on all proxy and storage nodes
  fetch: dest=fetch/{{ item }}.ring.gz flat=yes src=/etc/swift/{{ item }}.ring.gz
  when: rebalance.changed
  with_items:
    - account
    - object
    - container

#- name: grab resulting *.builder file and put them on all proxy nodes
#  fetch: dest=fetch/{{ item }}.builder flat=yes src=/etc/swift/{{ item }}.ring.gz
#  when: rebalance.changed
#  with_items:
#    - account
#    - object
#    - container


- name: put the *.ring.gz on all proxy nodes
  copy: src=fetch/{{ item }}.ring.gz dest=/etc/swift/{{item}}.ring.gz owner=swift group=swift mode=0640
  with_items:
    - account
    - object
    - container
  when: hostname != "controller1"


#- name: put the *.builder on all proxy nodes
#  copy: src=fetch/{{ item }}.builder dest=/etc/swift/{{item}}.builder owner=swift group=swift mode=0640
#  with_items:
#    - account
#    - object
#    - container
#  when: hostname != "controller1"



#- name: rebalance rings
#  command: swift-ring-builder {{ item }}.builder rebalance
#           creates=/etc/swift/{{ item }}.ring.gz
#           chdir=/etc/swift
#  register: rebalance
#  with_items:
#    - account
#    - object
#    - container
#  when: hostname != "controller1"


- name: start swift-proxy on proxy nodes
  service: name=swift-proxy state=running
  when: ansible_os_family == 'Debian'


- name: start object-expirer on proxy nodes
  command: swift-init object-expirer start




  



